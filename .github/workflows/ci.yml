name: CI

on:
  push:
    branches:
    - master
  pull_request:
  # Run weekly at 1:23 UTC
  schedule:
  - cron: '23 1 * * 0'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:

    runs-on: ${{ matrix.os }}
    # On push events run the CI only on master by default, but run on any branch if the commit message contains '[ci all]'
    if: >-
      github.event_name != 'push'
      || (github.event_name == 'push' && github.ref == 'refs/heads/master')
      || (github.event_name == 'push' && github.ref != 'refs/heads/master' && contains(github.event.head_commit.message, '[ci all]'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        include:
          - os: macos-13
            python-version: '3.12'
          - os: macos-latest
            python-version: '3.12'
          - os: windows-latest
            python-version: '3.12'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the latest version of uv
      if: matrix.python-version != '3.7'
      uses: astral-sh/setup-uv@v3

    - name: Checkout LLVM on macOS
      if: >-
          matrix.os == 'macos-13'
          || matrix.os == 'macos-latest'
      uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        ref: release/18.x
        path: llvm-project

    - name: Build OpenMP on macOS
      if: >-
          matrix.os == 'macos-13'
          || matrix.os == 'macos-latest'
      env:
        MACOSX_DEPLOYMENT_TARGET: "10.9"
      working-directory: llvm-project
      run: |
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=$(brew --prefix) \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DLIBOMP_INSTALL_ALIASES=OFF \
          -S openmp \
          -B build
        cmake --build build --parallel
        cmake --install build

    - name: Install dependencies
      if: matrix.python-version == '3.7'
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade ".[test]"

    - name: Install dependencies
      if: matrix.python-version != '3.7'
      run: |
        uv pip install --system --upgrade ".[test]"

    - name: List installed Python packages
      run: python -m pip list

    - name: Test with pytest and coverage
      # FIXME: Running with coverage causes failures
      run: |
        pytest tests
